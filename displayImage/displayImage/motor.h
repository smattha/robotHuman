// Generated by gencpp from file displayImage/motor.msg
// DO NOT EDIT!


#ifndef DISPLAYIMAGE_MESSAGE_MOTOR_H
#define DISPLAYIMAGE_MESSAGE_MOTOR_H

#include <ros/service_traits.h>


#include <displayImage/motorRequest.h>
#include <displayImage/motorResponse.h>


namespace displayImage
{

struct motor
{

typedef motorRequest Request;
typedef motorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct motor
} // namespace displayImage


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::displayImage::motor > {
  static const char* value()
  {
    return "cbdd7ed8b6e29636adf182638922e0d8";
  }

  static const char* value(const ::displayImage::motor&) { return value(); }
};

template<>
struct DataType< ::displayImage::motor > {
  static const char* value()
  {
    return "displayImage/motor";
  }

  static const char* value(const ::displayImage::motor&) { return value(); }
};


// service_traits::MD5Sum< ::displayImage::motorRequest> should match
// service_traits::MD5Sum< ::displayImage::motor >
template<>
struct MD5Sum< ::displayImage::motorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::displayImage::motor >::value();
  }
  static const char* value(const ::displayImage::motorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::displayImage::motorRequest> should match
// service_traits::DataType< ::displayImage::motor >
template<>
struct DataType< ::displayImage::motorRequest>
{
  static const char* value()
  {
    return DataType< ::displayImage::motor >::value();
  }
  static const char* value(const ::displayImage::motorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::displayImage::motorResponse> should match
// service_traits::MD5Sum< ::displayImage::motor >
template<>
struct MD5Sum< ::displayImage::motorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::displayImage::motor >::value();
  }
  static const char* value(const ::displayImage::motorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::displayImage::motorResponse> should match
// service_traits::DataType< ::displayImage::motor >
template<>
struct DataType< ::displayImage::motorResponse>
{
  static const char* value()
  {
    return DataType< ::displayImage::motor >::value();
  }
  static const char* value(const ::displayImage::motorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DISPLAYIMAGE_MESSAGE_MOTOR_H
